# SimplexTree.remove { #simplextree.SimplexTree.SimplexTree.remove }

```python
SimplexTree.SimplexTree.remove(simplices)
```

Removes simplices into the Simplex Tree.

By definition, removing a face also removes all of its cofaces. If the simplex does not exist in the complex, the tree is not modified.

## Parameters {.doc-section .doc-section-parameters}

| Name      | Type                   | Description                                                      | Default    |
|-----------|------------------------|------------------------------------------------------------------|------------|
| simplices | Iterable\[Collection\] | Iterable of simplices to insert (each of which are SimplexLike). | _required_ |

::: {.callout-note}
        If the iterable is an 2-dim np.ndarray, then a p-simplex is removed along each contiguous p+1 stride.
        Otherwise, each element of the iterable to casted to a Simplex and then removed from the tree.
:::

## Examples {.doc-section .doc-section-examples}

```{python}
from simplextree import SimplexTree
st = SimplexTree([range(3)])
print(st)
```
```{python}
st.remove([[0,1]])
print(st)
```